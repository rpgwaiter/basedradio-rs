name: Build Desktop Apps

on:
  push:
    branches: [ main ]
    # TODO: only on tags

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu

          # - os: macos-latest
          #   arch: x86_64
          #   target: x86_64-apple-darwin

          # - os: macos-latest
          #   arch: aarch64
          #   target: aarch64-apple-darwin

          # - os: windows-latest
          #   arch: x86_64
          #   target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: get binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install dx
        run: cargo binstall dioxus-cli

      - name: Install platform deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libatk1.0-dev ]
            libayatana-appindicator3-dev \
            libcairo2-dev \
            libgdk-pixbuf-2.0-dev \
            libgtk-3-dev \
            libjavascriptcoregtk-4.1-dev \
            libpango1.0-dev \
            librsvg2-dev \
            libsoup-3.0-dev \
            libssl-dev \
            libwebkit2gtk-4.1-dev \
            libxdo-dev \
            pkg-config 

      - name: Build Dioxus Desktop app
        working-directory: ./app
        run: NO_STRIP=true dx bundle --verbose --trace --json-output --platform=desktop --features=desktop --release

      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: basedradio-${{ matrix.os }}
      #     path: ./app/target/dx/basedradio-rs/bundle/linux/appimage/BasedradioRs_${{ github.ref_name }}_${{ matrix.target }}.AppImage
